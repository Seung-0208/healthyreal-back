<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 매퍼파일 -->
<mapper namespace="com.ictedu.springapp.onememo.service.impl.OnememoMapper">
	<!--resultMap요소 사용시 column속성 필수:ibatis와 다른점  -->
	<!-- 레코드를 조회하는 모든 select태그에서 사용할 수 있다 
		 상세보기에 적용해 보자 :글 번호에 따른 모든 한줄 댓글도 가져오기위해 
		 collection요소 사용
		 type속성:DTO계열 즉 SELECT한 쿼리 결과를 담을 자바빈 객체
		 id속성: select 요소의 resultMap속성에 설정해줄 식별자    
	 -->
	 <!-- 쿼리 조인 결과를 담을 ResultMap 요소 정의 -->
	<resultMap type="onememoDto" id="onememoResult">
		<!-- 
		property:자바빈(OnememoDTO)의 속성명
		column:테이블의 컬럼(조회(SELECT)결과의 컬럼명들 의미)
		 -->
		<result property="no" column="no"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="postDate" column="postDate"/>
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<!-- 조인 쿼리시 반드시 commentCounts로 별칭하자 -->
		<result property="commentCounts" column="commentCounts"/>
		<!-- 
		1:N관계 매핑용(collection요소 사용)
		column: 조인 조건의 컬럼명 (ON onememo.no = linecomment.no)
		select: select태그의 id 속성값(쿼리문은 조인문)
		javaType : Onememo테이블의 자식 레코드를 담는 컬렉션 타입 즉 (List<LineCommentDTO>)
		ofType : 자식의 DTO타입
		property: 댓글 목록을 담을 OnememoDTO속성명
		
		
		아래 collection요소 사용시 
		현재 매퍼파일에서 메모글 하나 가져올때 반드시 resultMap="memoDtoResult"을 사용하지
		 -->
		<collection property="comments" column="no" select="com.ictedu.springapp.onememo.service.impl.CommentMapper.findAllByNo" javaType="list" ofType="commentDto"/>
	</resultMap>
	
	<select id="findByMember" parameterType="Map"  resultType="boolean" >
		SELECT COUNT(*) FROM member WHERE id=#{id} AND pwd=#{pwd}
	</select>
	
	<select id="count" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		FROM onememo o JOIN member m ON m.id=o.id
		<where>
			<if test="searchWord !=null">
				${searchColumn} LIKE '%' || #{searchWord} || '%'
			</if>		
		</where>
	</select>
	<!-- 
	검색시 :<where>
			<if test="searchWord !=null">
				${searchColumn} LIKE '%' || #{searchWord} || '%'
			</if>
		  </where>만 추가. 자바코드 수정 불필요
	
	페이징시:
		1.구간쿼리로 변경
		2.총 레코드수 구하는 쿼리 추가
		3.서비스단에 페이징관련 로직추가
		4.JSP에서 출력
	 -->
	 <select id="findAll" parameterType="Map" resultType="onememoDto">
	 	SELECT * FROM (SELECT o.*,name,(SELECT COUNT(*) FROM linecomment WHERE no=o.no) commentCounts, RANK() OVER (ORDER BY no DESC) AS no_rank 
		FROM onememo o JOIN member m ON o.id=m.id 
		<where>
					<if test="searchWord !=null">
						${searchColumn} LIKE '%' || #{searchWord} || '%'
					</if>		
		</where>
		)
		WHERE no_rank BETWEEN #{start} AND #{end}	 
	 </select>
	
	<insert id="save" parameterType="Map">
		INSERT INTO onememo VALUES(SEQ_ONEMEMO.NEXTVAL,#{title},#{content},SYSDATE,#{id})	
	</insert>
	<select id="findByKey" parameterType="Map" resultMap="onememoResult">
		<!-- 글 번호에 따른 댓글 수는 제외하고 조회(상세보기 화면이니까:해당 글번호의 모든 댓글 뿌리니까) -->
		SELECT o.*,name
		FROM onememo o JOIN member m ON m.id=o.id
		WHERE no=#{no}
	</select>
	<update id="updateByKey" parameterType="onememoDto">
		UPDATE onememo SET title=#{title},content=#{content} WHERE no=#{no}	
	</update>
	<delete id="deleteByKey" parameterType="onememoDto">
		DELETE onememo WHERE no=#{no}
	</delete>
	<!-- 스프링 씨큐리티 회원 입력용(REST API서비스) -->
	<insert id="saveUser" parameterType="Map">
		INSERT INTO member VALUES(#{id},#{pwd},#{name},DEFAULT,DEFAULT)
	</insert>
</mapper>